{"ast":null,"code":"var _jsxFileName = \"/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/pages/SavedBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { useQuery } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedBooks = () => {\n  _s();\n\n  const [userData, setUserData] = useState({}); // use this to determine if `useEffect()` hook needs to run again\n\n  const userDataLength = Object.keys(userData).length; // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n  //       if (!token) {\n  //         return false;\n  //       }\n  //       const response = await getMe(token);\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n  //   getUserData();\n  // }, [userDataLength]);\n\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME); // get error if try to access data from get me query before it loads\n\n  if (!loading) {\n    console.log('get me query:', data.me);\n  } // setUserData(data);\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser); // upon success, remove book's id from localStorage\n\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedBooks, \"4VofXpQOgoXVUGZAWkkGMx0wRXQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = SavedBooks;\nexport default SavedBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteBook","Auth","removeBookId","useQuery","GET_ME","SavedBooks","userData","setUserData","userDataLength","Object","keys","length","loading","data","console","log","me","handleDeleteBook","bookId","token","loggedIn","getToken","response","ok","Error","updatedUser","json","err","error","savedBooks","map","book","image","title","authors","description"],"sources":["/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nimport { useQuery } from '@apollo/client';\nimport {GET_ME} from '../utils/queries'\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\nconst {loading, data} = useQuery(GET_ME);\n// get error if try to access data from get me query before it loads\nif (!loading){\n  console.log('get me query:', data.me)\n}\n\n  // setUserData(data);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}