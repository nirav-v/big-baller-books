{"ast":null,"code":"var _jsxFileName = \"/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/pages/SavedBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Jumbotron, Container, CardColumns, Card, Button } from \"react-bootstrap\"; //import { getMe, deleteBook } from \"../utils/API\";\n\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SavedBooks = () => {\n  _s();\n\n  const [userData, setUserData] = useState({}); // use this to determine if `useEffect()` hook needs to run again\n\n  const userDataLength = Object.keys(userData).length;\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(GET_ME); // cannot access data.me from get me query before it loads\n\n  useEffect(() => {\n    try {\n      if (loading) {\n        console.log(\"loading..\");\n      }\n\n      if (error) {\n        console.log(error);\n      }\n\n      if (data) {\n        // console.log(\"get me query:\", data.me);\n        setUserData(data.me);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [userDataLength]);\n  const [removeBook] = useMutation(REMOVE_BOOK); // create function that accepts the book's mongo _id value as param and deletes the book from the database\n\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const updatedSavedBooks = await removeBook({\n        variables: {\n          bookId: bookId\n        }\n      }); //  document.location.replace('/saved');\n\n      setUserData(updatedSavedBooks.data.removeBook); // upon success, remove book's id from localStorage\n\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // if data isn't here yet, say so\n\n\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? \"book\" : \"books\"}:` : \"You have no saved books!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SavedBooks, \"74HUKW481uZY37nh/Q3EUSLJGpk=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = SavedBooks;\nexport default SavedBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","Auth","removeBookId","useQuery","useMutation","GET_ME","REMOVE_BOOK","SavedBooks","userData","setUserData","userDataLength","Object","keys","length","loading","data","error","console","log","me","removeBook","handleDeleteBook","bookId","token","loggedIn","getToken","updatedSavedBooks","variables","err","savedBooks","map","book","image","title","authors","description"],"sources":["/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Jumbotron,\n  Container,\n  CardColumns,\n  Card,\n  Button,\n} from \"react-bootstrap\";\n\n//import { getMe, deleteBook } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\nimport { removeBookId } from \"../utils/localStorage\";\n\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_ME } from \"../utils/queries\";\nimport { REMOVE_BOOK } from \"../utils/mutations\";\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  const { loading, data, error } = useQuery(GET_ME);\n  // cannot access data.me from get me query before it loads\n  useEffect(() => {\n    try {\n      if (loading) {\n        console.log(\"loading..\");\n      }\n      if (error) {\n        console.log(error);\n      }\n      if (data) {\n        // console.log(\"get me query:\", data.me);\n        setUserData(data.me);\n      }\n\n    } catch (error) {\n      console.error(error);\n    }\n  }, [userDataLength]);\n\n  const [removeBook] = useMutation(REMOVE_BOOK);\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const updatedSavedBooks = await removeBook({\n        variables: {\n          bookId: bookId,\n        },\n      });\n      //  document.location.replace('/saved');\n       setUserData( updatedSavedBooks.data.removeBook);\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className=\"text-light bg-dark\">\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${\n                userData.savedBooks.length === 1 ? \"book\" : \"books\"\n              }:`\n            : \"You have no saved books!\"}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border=\"dark\">\n                {book.image ? (\n                  <Card.Img\n                    src={book.image}\n                    alt={`The cover for ${book.title}`}\n                    variant=\"top\"\n                  />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className=\"small\">Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button\n                    className=\"btn-block btn-danger\"\n                    onClick={() => handleDeleteBook(book.bookId)}\n                  >\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}