{"ast":null,"code":"var _jsxFileName = \"/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\n// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap'; // import { loginUser } from '../utils/API';\n\nimport Auth from '../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [userFormData, setUserFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [loginUser] = useMutation(LOGIN_USER);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await loginUser(userFormData);\n      const {\n        data\n      } = await loginUser({\n        variables: {\n          email: userFormData.email,\n          password: userFormData.password\n        }\n      }); // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n      // const { token, user } = await response.json();\n      // console.log(user);\n      // Auth.login(token);\n\n      Auth.login(data.login.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        dismissible: true,\n        onClose: () => setShowAlert(false),\n        show: showAlert,\n        variant: \"danger\",\n        children: \"Something went wrong with your login credentials!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Your email\",\n          name: \"email\",\n          onChange: handleInputChange,\n          value: userFormData.email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Email is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Your password\",\n          name: \"password\",\n          onChange: handleInputChange,\n          value: userFormData.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n          type: \"invalid\",\n          children: \"Password is required!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !(userFormData.email && userFormData.password),\n        type: \"submit\",\n        variant: \"success\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"b6OEU6FXJiSbdKNinaGYvls/NDY=\", false, function () {\n  return [useMutation];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","Auth","useMutation","LOGIN_USER","LoginForm","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","loginUser","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","data","variables","login","token","err","console","error","username"],"sources":["/Users/niravvenkatesan/bootcamp-homework/book-look-up/client/src/components/LoginForm.js"],"sourcesContent":["// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n// import { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nimport { useMutation } from '@apollo/client';\nimport {LOGIN_USER} from '../utils/mutations'\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [loginUser] = useMutation(LOGIN_USER)\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      // const response = await loginUser(userFormData);\n      const {data} = await loginUser({\n        variables: {\n          email: userFormData.email,\n          password: userFormData.password\n        }\n      })\n\n      // if (!response.ok) {\n      //   throw new Error('something went wrong!');\n      // }\n\n      // const { token, user } = await response.json();\n      // console.log(user);\n      // Auth.login(token);\n\n      Auth.login(data.login.token)\n\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}